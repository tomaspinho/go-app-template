// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: examples.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createExample = `-- name: CreateExample :one
INSERT INTO examples (
  name, description
) VALUES (
  $1, $2
)
RETURNING id, name, description
`

type CreateExampleParams struct {
	Name        string
	Description pgtype.Text
}

func (q *Queries) CreateExample(ctx context.Context, arg CreateExampleParams) (Example, error) {
	row := q.db.QueryRow(ctx, createExample, arg.Name, arg.Description)
	var i Example
	err := row.Scan(&i.ID, &i.Name, &i.Description)
	return i, err
}

const deleteExample = `-- name: DeleteExample :exec
DELETE FROM examples
WHERE id = $1
`

func (q *Queries) DeleteExample(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, deleteExample, id)
	return err
}

const getexample = `-- name: Getexample :one
SELECT id, name, description FROM examples
WHERE id = $1 LIMIT 1
`

func (q *Queries) Getexample(ctx context.Context, id int64) (Example, error) {
	row := q.db.QueryRow(ctx, getexample, id)
	var i Example
	err := row.Scan(&i.ID, &i.Name, &i.Description)
	return i, err
}

const listExamples = `-- name: ListExamples :many
SELECT id, name, description FROM examples
ORDER BY name
`

func (q *Queries) ListExamples(ctx context.Context) ([]Example, error) {
	rows, err := q.db.Query(ctx, listExamples)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Example
	for rows.Next() {
		var i Example
		if err := rows.Scan(&i.ID, &i.Name, &i.Description); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateExample = `-- name: UpdateExample :exec
UPDATE examples
  set name = $2,
  description = $3
WHERE id = $1
`

type UpdateExampleParams struct {
	ID          int64
	Name        string
	Description pgtype.Text
}

func (q *Queries) UpdateExample(ctx context.Context, arg UpdateExampleParams) error {
	_, err := q.db.Exec(ctx, updateExample, arg.ID, arg.Name, arg.Description)
	return err
}
